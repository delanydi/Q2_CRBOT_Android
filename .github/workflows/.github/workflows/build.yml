name: Build CRBOT for Android

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-android:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        abi: [armeabi-v7a, arm64-v8a]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Android NDK
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25c
        add-to-path: true
        
    - name: Build CRBOT for ${{ matrix.abi }}
      run: |
        echo "Building for architecture: ${{ matrix.abi }}"
        ndk-build APP_ABI=${{ matrix.abi }} NDK_PROJECT_PATH=. APP_BUILD_SCRIPT=Android.mk
        
    - name: Prepare artifacts
      run: |
        mkdir -p release/${{ matrix.abi }}
        cp libs/${{ matrix.abi }}/libcrbot.so release/${{ matrix.abi }}/
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: crbot-${{ matrix.abi }}
        path: release/${{ matrix.abi }}/
        retention-days: 30

  create-release:
    needs: build-android
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create release package
      run: |
        mkdir -p crbot-android-release
        cp -r crbot-armeabi-v7a/* crbot-android-release/ 2>/dev/null || true
        cp -r crbot-arm64-v8a/* crbot-android-release/ 2>/dev/null || true
        
        # Create directory structure
        mkdir -p crbot-android-release/armeabi-v7a
        mkdir -p crbot-android-release/arm64-v8a
        
        # Move files to proper architecture folders
        [ -f crbot-armeabi-v7a/libcrbot.so ] && cp crbot-armeabi-v7a/libcrbot.so crbot-android-release/armeabi-v7a/
        [ -f crbot-arm64-v8a/libcrbot.so ] && cp crbot-arm64-v8a/libcrbot.so crbot-android-release/arm64-v8a/
        
        # Create installation instructions
        cat > crbot-android-release/INSTALL.txt << 'EOF'
        CRBOT for Quad Touch - Installation Instructions
        
        1. Copy the appropriate libcrbot.so to your Android device:
           - For 32-bit devices: use armeabi-v7a/libcrbot.so
           - For 64-bit devices: use arm64-v8a/libcrbot.so
           
        2. Place the file in your Quad Touch Quake 2 directory:
           /Android/data/com.opentouchgaming.quadtouch/files/quake2/crbot/
           
        3. Launch Quad Touch and load Quake 2
        4. Test with console command: sv addbots 0 1
        EOF
        
        # Create archive
        tar -czf crbot-android-complete.tar.gz crbot-android-release/
        
    - name: Upload complete release
      uses: actions/upload-artifact@v4
      with:
        name: crbot-android-complete
        path: crbot-android-complete.tar.gz
        retention-days: 90
